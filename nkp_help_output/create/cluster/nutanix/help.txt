Create a Konvoy cluster in Nutanix

Usage:
  nkp create cluster nutanix [flags]

Flags:
      --acme-email string                                  Email address the ACME server can use to contact you.
      --acme-server string                                 Address of the ACME service issuing the certificates (default: Let's encrypt). (default "https://acme-v02.api.letsencrypt.org/directory")
      --additional-trust-bundle string                     Additional CA trust bundle to use to validate the Prism Central server certificate.
      --airgapped                                          Enable airgapped mode.
      --allow-missing-template-keys                        If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats. (default true)
      --aws-service-endpoints string                       Custom AWS service endpoints in a semi-colon separated format: ${SigningRegion1}:${ServiceID1}=${URL},${ServiceID2}=${URL};${SigningRegion2}...
      --bootstrap-cluster-image string                     Container image used to create the bootstrap cluster. Can be an image name or path to a filee.g. ./nkp-v2.16.0/konvoy-bootstrap-image-v2.16.0.tar. If not provided, the default image will be used (default "docker.io/mesosphere/konvoy-bootstrap:v2.16.0")
      --bundle files                                       A comma separated list of bundle artifacts that will be pushed to an in-cluster registry. Supports glob pattern to match multiple artifacts (e.g. ./bundles/*.tar). Following artifacts must be provided: konvoy-image-bundle-v2.16.0.tar, kommander-image-bundle-v2.16.0.tar (default [])
      --cluster-hostname string                            Hostname that is used for accessing the cluster's ingresses.
  -c, --cluster-name name                                  Name used to prefix the cluster and all the created resources.
      --control-plane-cores-per-vcpu int32                 The number of cores per vCPU(equivalent to CPU cores) to use in a control plane machine (default 1)
      --control-plane-disk-size int32                      The size of the primary disk (in GiB) of a control plane machine (default 80)
      --control-plane-endpoint-ip ip                       The control plane endpoint ip. Must be a static IPv4 address from the Layer 2 network of the control plane machines.
      --control-plane-endpoint-port int32                  The control plane endpoint port. (default 6443)
      --control-plane-external-endpoint string             The external control plane endpoint. A host that resolves to the endpoint IP. The host may be a Floating IPv4 address that maps to the control plane endpoint IP, or an FQDN that resolves to the control plane endpoint IP.
      --control-plane-memory int32                         The size of memory (in GiB) of a control plane machine (default 16)
      --control-plane-pc-categories strings                Names of Prism Central categories to associate with control plane resources (VMs, VGs, etc). Example: key1=value1,key1=value2,key2=value2 (default [])
      --control-plane-pc-project string                    Name of Prism Central project to associate with control plane resources (VMs, VGs, etc).
      --control-plane-prism-element-cluster string         Name of the Prism Element cluster to use to create a control plane machine
      --control-plane-renew-certificates-before int32      Enables automated control-plane certificates renewal. Provide the number of days between 7 and 360 when to trigger the certificate renewal. The renewal process will trigger new control-plane Machines to be created. A value of 0 disables the feature. (default 180)
      --control-plane-replicas int32                       Number of control plane nodes (default 3)
      --control-plane-subnets strings                      Names of Prism Central subnets to use for control plane machines. Example: subnet1,subnet2,subnet3 (default [])
      --control-plane-vcpus int32                          The number of vCPUs(equivalent to CPU sockets) to use in a control plane machine (default 4)
      --control-plane-vm-image string                      Name of OS image to use for control plane machines.
      --csi-file-system string                             File system to use for CSI volumes. Allowed values ["ext4" "xfs"]. (default "ext4")
      --csi-flash-mode                                     If true, will enable flash mode for CSI volumes.
      --csi-hypervisor-attached-volumes                    If true, will enable the hypervisor attached feature for CSI volumes which allows disks to attach directly to the host without using iSCSI. (default true)
      --csi-reclaim-policy string                          Reclaim policy for CSI volumes. Allowed values ["Delete" "Retain"]. (default "Delete")
      --csi-storage-container string                       Name of the Prism Central storage container to associate with the storage class created on the cluster.
      --dry-run                                            Only print the objects that would be created, without creating them.
      --endpoint url                                       Prism Central URL. Accepted formats: host, host:port, http[s]://host[:port]. Accepted host formats: IP, FQDN.
      --extra-sans strings                                 A comma separated list of additional Subject Alternative Names for the API Server signing cert (default [])
      --fips                                               Enable FIPS mode. Note: The OS images used by the cluster must be prepared with FIPS mode enabled.
  -h, --help                                               Help for nutanix
      --http-proxy string                                  HTTP proxy for all nodes in the cluster
      --https-proxy string                                 HTTPS proxy for all nodes in the cluster
      --ingress-ca file                                    Path to file containing the certificate's CA bundle.
      --ingress-certificate file                           Path to file containing certificates for configuring Ingress.
      --ingress-private-key file                           Path to file containing the certificate's private key (PEM).
      --insecure                                           If true, the Prism Central server certificate will not be validated.
      --kubeconfig string                                  Path to the kubeconfig for the management cluster. If unspecified, default discovery rules apply. This flag is ignored if used with the --self-managed flag.
      --kubernetes-pod-network-cidr cidr                   The Kubernetes Pod network CIDR to use in the cluster (default 192.168.0.0/16)
      --kubernetes-service-cidr cidr                       The Kubernetes Service CIDR to use in the cluster (default 10.96.0.0/12)
      --kubernetes-service-load-balancer-ip-range string   A hyphen separated IP range to configure the Kubernetes Service Load Balancer provider with. Example: 10.0.0.0-10.0.0.10
      --kubernetes-version string                          Kubernetes version (default "1.33.2")
  -n, --namespace string                                   If present, the namespace scope for this CLI request. (default "default")
      --no-proxy strings                                   No Proxy list for all nodes in the cluster (default [])
      --ntp-servers strings                                A comma-separated list of NTP servers to configure on all nodes. Each entry must be a fully qualified domain name (FQDN) or an IP address (IPv4 or IPv6). This list overrides any default NTP settings preconfigured in the machine image. (default [])
  -o, --output string                                      Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file).
      --output-directory string                            Used with --output=json|yaml. The directory where to output resources to files. The directory must already exist.
      --registry-cacert file                               Path to file containing the CA certificate used to verify the registry server certificate
      --registry-mirror-cacert file                        Path to file containing the CA certificate used to verify the registry mirror server certificate
      --registry-mirror-password string                    Password used to authenticate with the registry mirror
      --registry-mirror-url url                            URL of a container registry used as a mirror (required for air-gapped installations)
      --registry-mirror-username string                    Username used to authenticate with the registry mirror
      --registry-password string                           Password used to authenticate with the registry
      --registry-url url                                   URL of a container registry
      --registry-username string                           Username used to authenticate with the registry
      --self-managed                                       When set to true, the required prerequisites are created before creating the cluster and the resulting cluster has all necessary components deployed onto itself, so it can manage its own cluster lifecycle. When set to false, a management cluster is used. (default false)
      --show-managed-fields                                If true, keep the managedFields when printing objects in JSON or YAML format.
      --skip-preflight-checks strings                      Skip preflight checks. Provide "all" to skip all checks, or a comma-separated list of check names. (default [])
      --ssh-public-key-file string                         Path to the authorized SSH key for the user
      --ssh-username string                                Name of the user to create on the instance (default "konvoy")
      --template string                                    Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
      --timeout duration                                   The length of time to wait before giving up. Zero means wait forever (e.g. 300s, 30m, 3h). (default 30m0s)
      --vm-image string                                    Name of OS image to use for all machines.
      --wait                                               If true, wait for operations to complete before returning. This flag is ignored and will always be 'true' if used with the --self-managed flag. (default true)
      --with-aws-bootstrap-credentials                     Set true to use AWS bootstrap credentials from your environment. When false, the instance profile of the EC2 instance where the CAPA controller is scheduled on will be used instead.
      --with-gcp-bootstrap-credentials                     Set true to use GCP bootstrap credentials from your environment. When false, the service account of the VM instance where the CAPG controller is scheduled on will be used instead.
      --worker-cores-per-vcpu int32                        The number of cores per vCPU(equivalent to CPU cores) to use in a worker machine (default 1)
      --worker-disk-size int32                             The size of the primary disk (in GiB) of a worker machine (default 80)
      --worker-memory int32                                The size of memory (in GiB) of a worker machine (default 32)
      --worker-pc-categories strings                       Names of Prism Central categories to associate with worker resources (VMs, VGs, etc). Example: key1=value1,key1=value2,key2=value2 (default [])
      --worker-pc-project string                           Name of Prism Central project to associate with worker resources (VMs, VGs, etc).
      --worker-prism-element-cluster string                Name of the Prism Element cluster to use to create a worker machine
      --worker-replicas int32                              Number of workers (default 4)
      --worker-subnets strings                             Names of Prism Central subnets to use for worker machines. Example: subnet1,subnet2,subnet3 (default [])
      --worker-vcpus int32                                 The number of vCPUs(equivalent to CPU sockets) to use in a worker machine (default 8)
      --worker-vm-image string                             Name of OS image to use for worker machines.

Global Flags:
  -v, --verbose int   Output verbosity
